import Head from 'next/head'
import { Inter } from 'next/font/google'
import { Box, Text } from '../atoms'
import { Footer } from '../organisms/layout/footer'
import { useAppContext } from '../context/AppContext'
import { useEffect, useState } from 'react'
import { Banner } from '../components/banner/banner'
import { FormLabel, useMediaQuery, useTheme } from '@mui/material'
import { useRouter } from 'next/router'
import { FormContainer, FormField, FormInput } from '../components/forms'
import axios from 'axios'


const inter = Inter({ subsets: ['latin'] })

export default function Home() {

   const { setLoading, alert } = useAppContext()
   const router = useRouter()

   const [formData, setFormData] = useState({})
   const [states, setStates] = useState()

   const widthLarge = useMediaQuery('(min-width:1536px)')

   const handleInputChange = (name, value) => {
      setFormData(prevData => ({ ...prevData, [name]: value }));
   };


   const theme = useTheme()
   const navBar = useMediaQuery(theme.breakpoints.down('md'))

   useEffect(() => {
      findStates()
   }, [])

   async function findStates() {
      try {

         const response = await axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados`);
         const { data = [] } = response;

         const statesList = data.map(state => ({
            label: state.nome,
            value: state.sigla
         }));


         setStates(statesList);
      } catch (error) {
         console.error("Erro ao obter lista de estados:", error);
      }
   }

   const handleSubmit = async () => {

      try {
         setLoading(true);
         const response = await fetch(`api/sendForm`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ formData }),
          });

         if (response.ok) {
            alert.success('Formulário enviado com sucesso');
            setFormData({
               name: '',
               codeArea: '',
               phoneNumber: '',
               email: '',
               responsability: '',
               state: '',
               company: '',
               feedback: '',
               contactForm: '',
            })
            router.push('/contact')
         } else {
            alert.error('Ocorreu um erro ao enviar o formulário.');
         }
      } catch (error) {
         console.error('Erro ao enviar formulário', error);
         alert.error('Ocorreu um erro ao enviar o formulário.');
      } finally {
         setLoading(false);
      }
   };

   const codeAreas = [
      { label: 'Espanha', value: '+34' },
      { label: 'México', value: '+52' },
      { label: 'Argentina', value: '+54' },
      { label: 'Colômbia', value: '+57' },
      { label: 'Estados Unidos', value: '+1' },
      { label: 'Canadá', value: '+1' },
      { label: 'Reino Unido', value: '+44' },
      { label: 'Austrália', value: '+61' },
      { label: 'Brasil', value: '+55' },
   ];


   const contactForms = [
      { label: 'WhatsApp', value: 'WhatsApp' },
      { label: 'E-mail', value: 'E-mail' },
      { label: 'Licação telefônica', value: 'Licação telefônica' },
      { label: 'Outro', value: 'Outro' }
   ];


   return (
      <>
         <Head>
            <title>LP Green4T - Conexão com Excelência</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/icons/logo-green.svg" />
         </Head>

         <Box fullWidth sx={styles.container}>
            <Box fullWidth sx={{ ...styles.containerSection }}>
               <Box sx={{ display: 'flex', width: '100%', height: { xs: 'auto', xm: 480, md: 480, lg: 735, xl: 968 }, }}>
                  <Box sx={{
                     position: 'absolute',
                     width: '100%',
                     height: { xs: 'auto', xm: 480, md: 480, lg: '100%' },
                     zIndex: 999,
                     display: 'flex',
                     alignItems: 'center',
                     justifyContent: 'center',
                  }}>
                     <Box
                        sx={{
                           display: 'flex',
                           alignItems: 'start',
                           justifyContent: 'center',
                           flexDirection: 'column',
                           gap: 3,
                           padding: { xs: '10px 80px', xm: '10px 30px', md: '0px 300px', lg: '0px 300px', xl: '0px 300px' },
                           maxWidth: { xs: '100%', xm: '100%', md: '100%', lg: '100%' }
                        }}>
                        <Box sx={{ display: 'flex', marginBottom: { xs: 1, xm: 1, md: 8, lg: 8 }, }}>
                           < Box sx={{
                              ...styles.menuIcon,
                              width: { xs: 80, xm: 40, md: 300, lg: 300 }, height: { xs: 40, xm: 40, md: 80, lg: 80 },
                              aspectRatio: '1/1',
                              backgroundImage: `url('/icons/logo-green.svg')`,
                              transition: '.3s',
                           }} />
                        </Box>
                        <Text bold veryLarge style={{ color: '#fff' }}>Conexão Excelência</Text>
                        <Text bold large style={{ color: '#fff' }}>O novo canal de Qualidade da green4t</Text>
                        <Text large light style={{ color: '#fff' }}>Uma iniciativa pensada exclusivamente para você ter um meio direto de comunicação
                           com nossa equipe de qualidade</Text>
                        <Text large light style={{ color: '#fff' }}>Aqui você pode compartilhar suas expêriencias, sugestões, dúvidas ou qualquer outro feedback
                           que deseje nos passar. Nossa equipe de Qualidade se dedicará a analisar e garantir um retorno breve e eficaz sobre suas contribuições. </Text>
                        <Text bold large style={{ color: '#fff' }}>Agradeçemos o contato</Text>
                     </Box>

                  </Box>
                  <Banner />
               </Box>
            </Box>
            <Box sx={{ display: 'flex', marginTop: 10, justifyContent: 'center', alignItems: 'center' }}>
               <FormContainer onSubmit={(e) => handleSubmit(e)}>
                  <FormField>
                     <FormLabel>
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: .5 }}>
                           <Text light>Preencha seu </Text>
                           <Text bold>nome completo.</Text>
                        </Box>
                     </FormLabel>
                     <FormInput type="text" placeholder="Introduza sua resposta" name="name" onChange={handleInputChange} />
                  </FormField>

                  <FormField>
                     <FormLabel>
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: .5 }}>
                           <Text light>Informe </Text>
                           <Text bold>seu cargo.</Text>
                        </Box>
                     </FormLabel>
                     <FormInput type="text" placeholder="Introduza sua resposta" name="responsability" onChange={handleInputChange} />
                  </FormField>

                  <FormField>
                     <FormLabel>
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: .5 }}>
                           <Text bold>Empresa </Text>
                           <Text light>em que trabalha.</Text>
                        </Box>
                     </FormLabel>
                     <FormInput type="text" placeholder="Introduza sua resposta" name="company" onChange={handleInputChange} />
                  </FormField>


                  <FormField>
                     <FormLabel>
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: .5 }}>
                           <Text light>Seu</Text>
                           <Text bold>estado.</Text>
                        </Box>
                     </FormLabel>
                     <FormInput type="select" placeholder="Introduza sua resposta" name="state" onChange={handleInputChange}>
                        {states?.map((option, index) => {
                           const valueStatus = `${option.label} (${option.value})`
                           return (
                              <option key={index} value={valueStatus}>
                                 {valueStatus}
                              </option>
                           )
                        })}
                     </FormInput>
                  </FormField>


                  <FormField>
                     <FormLabel>
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: .5 }}>
                           <Text light>Informe seu número de</Text>
                           <Text bold>telefone para contato.</Text>
                        </Box>
                     </FormLabel>
                     <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>
                        <FormInput type="select" placeholder="+55" name="codeArea" onChange={handleInputChange}>
                           {codeAreas?.map((option, index) => {
                              const valueStatus = `${option.label} (${option.value})`

                              return (
                                 <option key={index} value={valueStatus}>
                                    {valueStatus}
                                 </option>
                              )
                           })}
                        </FormInput>
                        <FormInput type="text" placeholder="Número de telefone" name="phoneNumber" onChange={handleInputChange} />
                     </Box>
                  </FormField>


                  <FormField>
                     <FormLabel>
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: .5 }}>
                           <Text light>Informe o </Text>
                           <Text bold>seu e-mail.</Text>
                        </Box>
                     </FormLabel>
                     <FormInput type="text" placeholder="Introduza sua resposta" name="email" onChange={handleInputChange} />
                  </FormField>

                  <FormField>
                     <FormLabel>
                        <Box sx={{
                           display: 'flex', alignItems: { xs: 'start', xm: 'center', md: 'center', lg: 'center' }, gap: 0.5,
                           flexDirection: { xs: 'column', xm: 'row', md: 'row', lg: 'row' }
                        }}>
                           <Text light>Registre aqui suas</Text>
                           <Text bold>expêriencias, sugestões, dúvidas ou qualquer outro feedback</Text>
                        </Box>
                        <Text light>Que deseje nos passar.</Text>
                     </FormLabel>
                     <FormInput type="textarea" placeholder="Introduza sua resposta" name="feedback" onChange={handleInputChange} rows={8} />
                  </FormField>

                  <FormField>
                     <FormLabel>
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: .5 }}>
                           <Text light>Qual a melhor forma para</Text>
                           <Text bold>entrarmos em contato?</Text>
                        </Box>
                     </FormLabel>
                     {contactForms?.map((option, index) => {
                        return (
                           <FormInput
                              type="checkbox"
                              name="contactForm"
                              checked={formData?.contactForm === option.value}
                              onChange={() => {
                                 setFormData({ ...formData, contactForm: option.value });
                              }}
                              key={index}
                           >
                              <Text key={index}>{option?.label}</Text>
                           </FormInput>
                        );
                     })}
                     {formData?.contactForm === 'Outro' && (
                        <FormField>
                           <FormInput type="text" placeholder="Qual?" name="obsContactForm" onChange={handleInputChange} />
                        </FormField>
                     )}
                  </FormField>

                  <Box sx={{
                     display: 'flex', gap: 1, backgroundColor: '#1E90FF', justifyContent: 'space-between',
                     padding: '0px 0px 0px 50px',
                     transition: '.3s',
                     '&:hover': {
                        opacity: .8,
                        cursor: 'pointer',
                        transform: 'scale(1.1, 1.1)'
                     }
                  }} onClick={() => handleSubmit()}>
                     <button type="submit" style={{
                        appearance: 'none', textDecoration: 'none', backgroundColor: '#1E90FF', border: 'none'
                     }} onSubmit={() => handleSubmit()}>
                        <Text style={{ color: '#fff', marginLeft: 10 }}>
                           Enviar
                        </Text>
                     </button>
                     <Box sx={{
                        backgroundColor: '#4169E1', width: '120px', height: '70px', display: 'flex', alignItems: 'center',
                        justifyContent: 'center'
                     }}>
                        <Text light style={{ color: '#fff', fontSize: 50 }}>{'>'}</Text>
                     </Box>
                  </Box>
               </FormContainer>
            </Box >



            <Footer />
         </Box >
      </>
   )
}

const styles = {
   container: {
      // backgroundColor: '#fff',
      flex: 1
   },
   containerSection: {
      justifyContent: 'center',
      alignItems: 'center',
      marginTop: { xs: 0, xm: 10, md: 10, lg: 0 },
      left: 0,
      width: '100%',
      height: 'auto'
   },
   textHeader: {
      color: '#fff'
   },
   imgGalery: {
      backgroundSize: { xs: `contain`, xm: 'contain', md: 'cover', lg: 'cover' },
      backgroundRepeat: 'no-repeat',
      // backgroundPosition: 'center center',
      // overflow: 'hidden',
      marginBottom: 3,
   },
   menuIcon: {
      backgroundSize: 'contain',
      backgroundRepeat: 'no-repeat',
      backgroundPosition: 'center',
      width: 15,
      height: 15,
   },
   formContainer: {
      marginTop: 20,
      padding: '0 20px',
   },
   inputContainer: {
      marginBottom: 20,
   },
   inputLabel: {
      fontSize: 16,
      marginBottom: 5,
      color: '#00B861', // Cor verde
   },
   input: {
      width: '100%',
      padding: 10,
      fontSize: 16,
      borderRadius: 5,
      border: '1px solid #00B861', // Borda verde
      backgroundColor: '#F2F2F2', // Cor de fundo mais clara
   },
   submitButton: {
      backgroundColor: '#00B861',
      color: '#fff',
      padding: 10,
      fontSize: 16,
      borderRadius: 5,
      cursor: 'pointer',
   },


}
